"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ngMessages","ngRoute","ui.router","ui.bootstrap","ui.utils","ngSanitize","angularFileUpload","angular-loading-bar","ngFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$httpProvider",function($locationProvider,$httpProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope","$state","Authentication",function($rootScope,$state,Authentication){$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){var allowed=!1;toState.data.roles.forEach(function(role){return void 0!==Authentication.user.roles&&-1!==Authentication.user.roles.indexOf(role)?(allowed=!0,!0):void 0}),allowed||(event.preventDefault(),void 0!==Authentication.user&&"object"==typeof Authentication.user?$state.go("forbidden"):$state.go("signin"))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){fromState.data&&fromState.data.ignoreState||($state.previous={state:fromState,params:fromParams,href:$state.href(fromState,fromParams)})})}]),angular.element(document).ready(function(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("core.admin",["core"]),ApplicationConfiguration.registerModule("core.admin.routes",["ui.router"]),ApplicationConfiguration.registerModule("messages"),ApplicationConfiguration.registerModule("store"),ApplicationConfiguration.registerModule("cart"),ApplicationConfiguration.registerModule("users",["core"]),ApplicationConfiguration.registerModule("users.admin",["core.admin"]),ApplicationConfiguration.registerModule("users.admin.routes",["core.admin.routes"]),angular.module("core.admin").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}]),angular.module("core.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/client/views/home.client.view.html"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/client/views/404.client.view.html",data:{ignoreState:!0}}).state("bad-request",{url:"/bad-request",templateUrl:"modules/core/client/views/400.client.view.html",data:{ignoreState:!0}}).state("forbidden",{url:"/forbidden",templateUrl:"modules/core/client/views/403.client.view.html",data:{ignoreState:!0}})}]),angular.module("core").controller("HeaderController",["$scope","$state","$http","$window","Authentication","Menus",function($scope,$state,$http,$window,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.signout=function(){$http.post("/api/auth/signout").success(function(){$window.location.reload()})}}]),angular.module("core").controller("HomeController",["$scope","$state","Authentication",function($scope,$state,Authentication){$scope.authentication=Authentication,$scope.authentication.user?$state.go("messages.list"):$state.go("signin")}]),angular.module("core").directive("showErrors",["$timeout","$interpolate",function($timeout,$interpolate){var linkFn=function(scope,el,attrs,formCtrl){var inputEl,inputName,inputNgEl,options,showSuccess,toggleClasses,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw"show-errors element has no child input elements with a 'name' attribute class";var reset=function(){return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)};scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},function(invalid){return toggleClasses(invalid)}),scope.$on("show-errors-check-validity",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?(initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)):void 0}),scope.$on("show-errors-reset",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?reset():void 0}),toggleClasses=function(invalid){return el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess?el.toggleClass("has-success",showValidationMessages&&!invalid):void 0}};return{restrict:"A",require:"^form",compile:function(elem,attrs){if(-1===attrs.showErrors.indexOf("skipFormGroupCheck")&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw"show-errors element does not have the 'form-group' or 'input-group' class";return linkFn}}}]),angular.module("core").factory("authInterceptor",["$q","$injector",function($q,$injector){return{responseError:function(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 401:$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden")}return $q.reject(rejection)}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user","admin"],this.menus={};var shouldRender=function(user){if(~this.roles.indexOf("*"))return!0;if(!user)return!1;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],roles:null===options.roles||"undefined"==typeof options.roles?this.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.state,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===menuItemState&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{roles:["*"]})}]),angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){this.connect=function(){Authentication.user&&(this.socket=io())},this.connect(),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]),angular.module("messages").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Messages",state:"messages.list",roles:["user","admin"]}),Menus.addMenuItem("topbar",{title:"Search",state:"search",roles:["user","admin"]})}]),angular.module("messages").config(["$stateProvider",function($stateProvider){$stateProvider.state("messages",{"abstract":!0,url:"/messages",template:"<ui-view/>"}).state("messages.list",{url:"/",templateUrl:"modules/messages/client/views/messages.client.view.html",data:{roles:["user","admin"]}}).state("messages.view",{url:"/:messageId",templateUrl:"modules/messages/client/views/view-message.client.view.html",data:{roles:["user","admin"]}}).state("messages.edit",{url:"/:messageId/edit",templateUrl:"modules/messages/client/views/edit-message.client.view.html",data:{roles:["user","admin"]}}).state("search",{url:"/search",templateUrl:"modules/messages/client/views/search-message.client.view.html",data:{roles:["user","admin"]}})}]),angular.module("messages").controller("MessagesController",["$scope","$stateParams","$rootScope","$location","$http","Users","Authentication","Messages","$window",function($scope,$stateParams,$rootScope,$location,$http,Users,Authentication,Messages,$window){$scope.authentication=Authentication,$scope.imagePopover={imageUrl:"",templateUrl:"imagePopoverTemplate.html",opened:!1},$scope.stylePopover={templateUrl:"stylePopoverTemplate.html",opened:!1},$scope.addUrl=function(){$rootScope.$broadcast("addStyle",$scope.imagePopover.imageUrl),$scope.imagePopover.imageUrl="",$scope.imagePopover.opened="false"},$scope.addStyle=function(value){$rootScope.$broadcast("addStyle",value),$scope.stylePopover.opened="false"},$scope.create=function(isValid){if($scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","messageForm"),!1;var message=new Messages({content:this.content});message.displayedUser=$scope.authentication.user,message.$save(function(response){$scope.content="",$scope.messages=$scope.loadMessages()},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(message){if(message){message.$remove(function(){$location.path("messages/")});for(var i in $scope.messages)$scope.messages[i]===message&&$scope.messages.splice(i,1)}else $scope.message.$remove(function(){$location.path("messages/")},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.update=function(isValid){if($scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","messageForm"),!1;var message=$scope.message;message.$update(function(){$location.path("messages/"+message._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.currentUser=$scope.getUser(),$scope.loadMessages()},$scope.getUser=function(){$http.get("/api/messages/user").success(function(response){$scope.currentUser=response})},$scope.findOne=function(){$scope.message=Messages.get({messageId:$stateParams.messageId})},$scope.currentPage=1,$scope.maxSize=5,$http.get("/api/messages/count").success(function(response){$scope.totalItems=response.count}),$scope.setPage=function(value){$scope.currentPage=value},$scope.pageChanged=function(){$scope.loadMessages()},$scope.loadMessages=function(){$http.get("/api/messages/page/"+$scope.currentPage).success(function(response){$scope.messages=response})}}]),angular.module("messages").controller("SearchController",["$scope","$stateParams","$filter","$http","Authentication","Messages","$window",function($scope,$stateParams,$filter,$http,Authentication,Messages,$window){$scope.user=Authentication.user,$scope.isCollapsed=!0,$scope.status={isAdvanced:!0,isopen:!1},$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=5,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filterLength=$scope.filteredItems.length;var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.pagedItems=$scope.filteredItems.slice(begin,end)},$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()},$scope.searchPosts=function(){console.log($scope.status.isAdvanced),$scope.status.isAdvanced?(console.log("Advanced Search"),$http.get("/api/messages/advancedsearch/"+JSON.stringify($scope.fields)).success(function(response){$scope.messages=response})):(console.log("Basic Search"),$scope.fields.keyword&&$http.get("/api/messages/basicsearch/"+$scope.fields.keyword).success(function(response){$scope.messages=response}))},$scope.items=[{value:"Username",text:"Search by Username"},{value:"Date",text:"Search by Date"},{value:"Name",text:"Search by Name"}],$scope.date_items=[{value:"=",text:"Equals to"},{value:">=",text:"Greather than or equal to"},{value:"<=",text:"Less than or equal to"},{value:"between",text:"To"}],$scope.date={date:"",range:"",type:1},$scope.post={username:"",firstName:"",type:1},$scope.fields={keyword:"",additionalFields:[{name:"Date",values:{date_start:new Date,date_end:new Date,range:"=",type:1},template:"field-date.html"}]},$scope.check=function(){},$scope.addField=function(option){var filter={name:"",values:null,template:""};filter.name=option,"Username"===option||"Name"===option?(filter.values={name:"",type:1},filter.template="field-text.html"):"Date"===option&&(filter.values={date_start:new Date,date_end:new Date,range:"=",type:1},filter.template="field-date.html"),filter.values&&$scope.fields.additionalFields.push(filter)},$scope.removeField=function(index){$scope.fields.additionalFields.splice(index,1)}}]),angular.module("messages").directive("contentStyling",["$rootScope",function($rootScope){return{scope:{model:"=ngModel"},link:function(scope,element,attrs){$rootScope.$on("addStyle",function(e,val){var domElement=element[0],moveSelection=4;if(!(val.length<=0)){if("<b>"===val?val="<b></b>":"<i>"===val?val="<i></i>":"<u>"===val?val="<u></u>":(val='<img src="'+val+'"/>',moveSelection=0),document.selection){domElement.focus();var sel=document.selection.createRange();sel.text=val,domElement.focus()}else if(domElement.selectionStart||0===domElement.selectionStart){var startPos=domElement.selectionStart,endPos=domElement.selectionEnd,scrollTop=domElement.scrollTop;domElement.value=domElement.value.substring(0,startPos)+val+domElement.value.substring(endPos,domElement.value.length),domElement.focus(),domElement.selectionStart=startPos+val.length-moveSelection,domElement.selectionEnd=endPos+val.length-moveSelection,domElement.scrollTop=scrollTop}else domElement.value+=val,domElement.focus();scope.model=domElement.value}})}}}]),angular.module("messages").factory("Messages",["$resource",function($resource){return $resource("api/messages/:messageId",{messageId:"@_id"},{update:{method:"PUT"}})}]),angular.module("store").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Donate",state:"donate",roles:["user","admin"]}),Menus.addMenuItem("topbar",{title:"Store",state:"store",type:"dropdown",roles:["user","admin"]}),Menus.addSubMenuItem("topbar","store",{title:"View Cart",state:"store.cart",roles:["user","admin"]}),Menus.addSubMenuItem("topbar","store",{title:"Add Item",state:"store.add",roles:["admin"]}),Menus.addSubMenuItem("topbar","store",{title:"Purchase Items",state:"store.list",roles:["user","admin"]})}]),angular.module("store").config(["$stateProvider",function($stateProvider){$stateProvider.state("donate",{url:"/donate",templateUrl:"modules/store/client/views/donate.client.view.html",data:{roles:["user","admin"]}}).state("store",{"abstract":!0,url:"/store",template:"<ui-view/>"}).state("store.list",{url:"",templateUrl:"modules/store/client/views/view-store.client.view.html",data:{roles:["user","admin"]}}).state("store.add",{url:"/newitem",templateUrl:"modules/store/client/views/create-item.client.view.html",data:{roles:["admin"]}}).state("store.cart",{url:"/cart",templateUrl:"modules/store/client/views/view-cart.client.view.html",data:{roles:["user","admin"]}})}]),angular.module("store").controller("StoreController",["$scope","$stateParams","$rootScope","$location","$http","Users","Authentication","FileUploader","Store","CartItem","$timeout","$state","$window",function($scope,$stateParams,$rootScope,$location,$http,Users,Authentication,FileUploader,Store,CartItem,$timeout,$state,$window){$scope.user=Authentication.user,$scope.imageURL="/modules/store/client/img/items/default.png",$scope.value=45,$scope.donation={},$scope.donation.packs=[{name:"$5 Donation Pack",value:"4edd40c86762e0fb1210185d"},{name:"$10 Donation Pack",value:"4edd40c86762e0fb1211810d"},{name:"$20 Donation Pack",value:"4edd40c86762e0fb1211820d"}],$scope.donation.pack=$scope.donation.packs[0].value,$scope.donation.quantity=1,$scope.name="5 Donation Pack",$scope.newCart=function(){$http.get("/api/store/cart/newcart")},$scope.addPacktoCart=function(){console.log("Adding ("+$scope.donation.pack+" - "+$scope.donation.quantity+") item to cart");var cartItem=new CartItem({_itemId:$scope.donation.pack,quantity:$scope.donation.quantity,displayedUser:$scope.user});cartItem.$save(function(response){$scope.donation.quantity=1,$scope.donation.pack=$scope.donation.packs[0].value},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.addToCart=function(){console.log("Adding ("+$scope.quantity+") items to cart."),$scope.error=null;var cartItem=new CartItem({_itemId:$scope.preview._id,name:$scope.preview.name,itemImageURL:$scope.preview.itemImageURL,price:$scope.preview.price,displayedUser:$scope.user,quantity:$scope.quantity});console.log(cartItem),cartItem.$save(function(response){$scope.quantity=1,$scope.preview=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.removeCartItem=function(itemId){$http["delete"]("/api/store/cart/"+itemId).success(function(response){console.log("Deleted: "+response)})},$scope.findCartItems=function(){$http.get("/api/store/cart").success(function(cart){$scope.cart=cart,console.log($scope.cart)})},$scope.checkout=function(){console.log("CHECKOUT"),$http.get("/api/store/cart/checkout").success(function(response){$window.location=response})},$scope.confirmCheckout=function(){console.log("Confirming Checkout!");var params=$location.search();$http.post("api/store/cart/confirmcheckout",params)},$scope.addItem=function(isValid){return $scope.error=null,isValid?void $scope.uploadProfilePicture():($scope.$broadcast("show-errors-check-validity","itemForm"),!1)},$scope.findItems=function(){$scope.items=$scope.loadItems()},$scope.displayItem=function(item){$scope.preview=item,$scope.quantity=1},$scope.currentPage=1,$scope.maxSize=5,$http.get("/api/store/count").success(function(response){$scope.totalShopItems=response.count}),$scope.setPage=function(value){$scope.currentPage=value},$scope.pageChanged=function(){$scope.loadItems()},$scope.loadItems=function(){$http.get("/api/store/page/"+$scope.currentPage).success(function(response){$scope.items=response})},$scope.uploader=new FileUploader({url:"/api/store/additem"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onBeforeUploadItem=function(item){item.formData.push({name:$scope.item.name,description:$scope.item.description,price:$scope.item.price})},$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL="/modules/store/client/img/items/default.png"}}]),angular.module("store").factory("Store",["$resource",function($resource){return $resource("api/store/item/:itemId",{itemId:"@_id"},{update:{method:"PUT"}})}]),angular.module("cart").factory("CartItem",["$resource",function($resource){return $resource("api/store/cart/:itemId",{itemId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users.admin").run(["Menus",function(Menus){Menus.addSubMenuItem("topbar","admin",{title:"Create Users",state:"admin.create"}),Menus.addSubMenuItem("topbar","admin",{title:"Backup Posts",state:"admin.backup"}),Menus.addSubMenuItem("topbar","admin",{title:"View Carts",state:"admin.carts"})}]),angular.module("users.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin.create",{url:"/create",templateUrl:"modules/users/client/views/admin/admin-signup.client.view.html",controller:"AdminAuthController"}).state("admin.backup",{url:"/backup",templateUrl:"modules/users/client/views/admin/admin-backup.client.view.html",controller:"BackUpController"}).state("admin.carts",{url:"/carts",templateUrl:"modules/users/client/views/admin/admin-view-carts.client.view.html",controller:"CartController"})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Profile",state:"profile",type:"dropdown",roles:["user","admin"]}),Menus.addSubMenuItem("topbar","profile",{title:"Users Page",state:"users"})}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("users",{url:"/users",templateUrl:"modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController"}).state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/client/views/settings/settings.client.view.html",data:{roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/client/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/client/views/settings/change-password.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/client/views/settings/change-profile-picture.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/client/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin?err",templateUrl:"modules/users/client/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/client/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/client/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/client/views/password/reset-password.client.view.html"}).state("profile",{"abstract":!0,url:"/profile",template:"<ui-view/>"}).state("profile.view",{url:"/:userId",templateUrl:"modules/users/client/views/profile/user-profile.client.view.html",data:{roles:["user","admin"]}})}]),angular.module("users.admin").controller("AdminAuthController",["$scope","$state","$http","$location","$window","Authentication","Admin",function($scope,$state,$http,$location,$window,Authentication,Admin){Admin.Check.query(),$scope.authentication=Authentication,$scope.error=$location.search().err;var maleItems=["Mr","Sir","Senior","Count"],femaleItems=["Miss","Ms","Mrs","Madame","Majesty","Seniora"];$scope.gender={},$scope.gender.names=[{name:"Male",value:"male"},{name:"Female",value:"female"}],$scope.gender.salutations=maleItems,$scope.access={},$scope.access.levels=[{name:"User",value:"user"},{name:"Admin",value:"admin"}],$scope.gender.name=$scope.gender.names[0].value,$scope.gender.salutation=$scope.gender.salutations[0],$scope.access.level=$scope.access.levels[0].value,$scope.$watch("gender.name",function(gender){"male"===gender.toLowerCase()?$scope.gender.salutations=maleItems:"female"===gender.toLowerCase()&&($scope.gender.salutations=femaleItems),$scope.gender.salutation=$scope.gender.salutations[0]});var roles;$scope.$watch("access.level",function(access){"admin"===$scope.access.level.toString()?roles=["user","admin"]:"user"===$scope.access.level.toString()&&(roles=["user"])}),$scope.signup=function(isValid){return $scope.error=null,isValid?($scope.credentials.gender=$scope.gender.name,$scope.credentials.salutation=$scope.gender.salutation,$scope.credentials.roles=roles,void $http.post("/api/admin/signup",$scope.credentials).success(function(response){$state.go("admin.users")}).error(function(response){$scope.error=response.message,$scope.error.indexOf("authorized")>=0&&$window.location.reload()})):($scope.$broadcast("show-errors-check-validity","userForm"),!1)}}]),angular.module("users.admin").controller("BackUpController",["$scope","$http","$state","$window","Authentication","Backup",function($scope,$http,$state,$window,Authentication,Backup){Backup.query(function(data){$scope.backups=data}),$scope.authentication=Authentication,$scope.createBackup=function(){$http.post("/api/admin/backup").success(function(data){$window.location.reload()})},$scope.findBackups=function(){Backup.query(function(data){$scope.backups=data})},$scope.downloadFile=function(file){console.log("Downloading file "+file.name),$http.get("/api/admin/download/"+file.name).success(function(data){var element=angular.element("<a/>");element.attr({href:"data:application/csv,"+encodeURIComponent(data),target:"_blank",download:file.name})[0].click()})}}]),angular.module("users.admin").controller("UserListController",["$scope","$filter","Admin",function($scope,$filter,Admin){Admin.View.query(function(data){$scope.users=data,$scope.buildPager()}),$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")($scope.users,{$:$scope.search}),$scope.filterLength=$scope.filteredItems.length;var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.pagedItems=$scope.filteredItems.slice(begin,end)},$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()}}]),angular.module("users.admin").controller("UserController",["$scope","$state","Authentication","userResolve",function($scope,$state,Authentication,userResolve){$scope.authentication=Authentication,$scope.user=userResolve,$scope.remove=function(user){confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),$scope.users.splice($scope.users.indexOf(user),1)):$scope.user.$remove(function(){$state.go("admin.users")}))},$scope.update=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=$scope.user;user.$update(function(){$state.go("admin.user",{userId:user._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("users").controller("AuthenticationController",["$scope","$state","$http","$location","$window","Authentication",function($scope,$state,$http,$location,$window,Authentication){$scope.authentication=Authentication,$scope.error=$location.search().err,$scope.authentication.user&&$location.path("/messages/");var maleItems=["Mr","Sir","Senior","Count"],femaleItems=["Miss","Ms","Mrs","Madame","Majesty","Seniora"];$scope.gender={},$scope.gender.names=[{name:"Male",value:"male"},{name:"Female",value:"female"}],$scope.gender.salutations=maleItems,$scope.gender.name=$scope.gender.names[0].value,$scope.gender.salutation=$scope.gender.salutations[0],$scope.$watch("gender.name",function(gender){"male"===gender.toLowerCase()?$scope.gender.salutations=maleItems:"female"===gender.toLowerCase()&&($scope.gender.salutations=femaleItems),$scope.gender.salutation=$scope.gender.salutations[0]}),$scope.signup=function(isValid){return $scope.error=null,isValid?($scope.credentials.gender=$scope.gender.name,$scope.credentials.salutation=$scope.gender.salutation,void $http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,console.log("redirected!"),$location.path("/")}).error(function(response){$scope.error=response.message})):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.signin=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go("messages.list")}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.callOauthProvider=function(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url}}]),angular.module("users").controller("DatePickerController",["$scope",function($scope,$http,$location){$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.toggleMin=function(){$scope.minDate=$scope.minDate?null:new Date},$scope.toggleMin(),$scope.open=function($event){$scope.status.opened=!0},$scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","MM/dd/yyyy","shortDate"],$scope.format=$scope.formats[2],$scope.status={opened:!1};var tomorrow=new Date;tomorrow.setDate(tomorrow.getDate()+1);var afterTomorrow=new Date;afterTomorrow.setDate(tomorrow.getDate()+2),$scope.events=[{date:tomorrow,status:"full"},{date:afterTomorrow,status:"partially"}],$scope.getDayClass=function(date,mode){
if("day"===mode)for(var dayToCheck=new Date(date).setHours(0,0,0,0),i=0;i<$scope.events.length;i++){var currentDay=new Date($scope.events[i].date).setHours(0,0,0,0);if(dayToCheck===currentDay)return $scope.events[i].status}return""}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("ProfileController",["$scope","$stateParams","$location","$http","Authentication","Profile",function($scope,$stateParams,$location,$http,Authentication,Profile){$scope.authentication=Authentication,$scope.findOne=function(){$scope.profile=Profile.get({userId:$stateParams.userId})}}]),angular.module("users").controller("ChangePasswordController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.user=Authentication.user,$scope.changeUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?($scope.passwordDetails.authUser=$scope.user,void $http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.$broadcast("show-errors-reset","passwordForm"),$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})):($scope.$broadcast("show-errors-check-validity","passwordForm"),!1)}}]),angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onBeforeUploadItem=function(item){item.formData.push({displayedUserId:$scope.user._id})},$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]),angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication","$window",function($scope,$http,$location,Users,Authentication,$window){$scope.user=Authentication.user;var flag=!0;$scope.error=$location.search().err;var maleItems=["Mr","Sir","Senior","Count"],femaleItems=["Miss","Ms","Mrs","Madame","Majesty","Seniora"];$scope.gender={},$scope.gender.names=[{name:"Male",value:"male"},{name:"Female",value:"female"}],$scope.gender.salutations=maleItems,$scope.gender.name=$scope.user.gender,$scope.gender.salutation=$scope.user.salutation,$scope.user.birthDate=new Date($scope.user.birthDate),$scope.$watch("gender.name",function(gender){"male"===gender.toLowerCase()?$scope.gender.salutations=maleItems:"female"===gender.toLowerCase()&&($scope.gender.salutations=femaleItems),flag?flag=!1:$scope.gender.salutation=$scope.gender.salutations[0]}),$scope.updateUserProfile=function(isValid){if($scope.success=$scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;$scope.user.gender=$scope.gender.name,$scope.user.salutation=$scope.gender.salutation;var user=new Users($scope.user);user.birthDate=new Date($scope.user.birthDate),user.displayedUser=$scope.user,user.$update(function(response){$scope.$broadcast("show-errors-reset","userForm"),$scope.success=!0},function(response){$scope.error=response.data.message})}}]),angular.module("users").controller("SocialAccountsController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","Authentication",function($scope,Authentication){$scope.user=Authentication.user}]),angular.module("users").directive("lowercase",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}}}),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]),angular.module("users").factory("Profile",["$resource",function($resource){return $resource("api/profile/:userId",{userId:"@_id"})}]),angular.module("users.admin").factory("Admin",["$resource",function($resource){return{Check:$resource("api/admin/isadmin"),View:$resource("api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}}]),angular.module("users.admin").factory("Backup",["$resource",function($resource){return $resource("api/admin/backup")}]);